#include <GL/glut.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "estrutura.h"

int aux = 0;

void criaPonto(tPtrPonto *p){
     *p = NULL;
}

void criaFace(tPtrFace *f){
     *f = NULL;
}

int inserePonto(tPtrPonto *p, double x, double y, double z){
    tPtrPonto aux, novo;
    
    aux = *p;
    if(aux == NULL){
        novo = malloc(sizeof(tPonto));
        if (novo == NULL)
	    return 0;
        novo -> x = x;
        novo -> y = y;
        novo -> z = z;
        novo -> prox = NULL;
        *p = novo;
        return 1;
    }else{
        while(aux -> prox){
              aux = aux -> prox;
        }
        novo = malloc(sizeof(tPonto));
        if (novo == NULL)
	    return 0;
        novo -> x = x;
        novo -> y = y;
        novo -> z = z;
        novo ->prox = aux -> prox;
        aux -> prox = novo;
        return 1;
    }
}

int insereFace(tPtrFace *f,tPtrPonto *p, int c1, int c2, int c3){
      tPtrFace auxF, novo;
      tPtrPonto auxP;
      int i;
      
      auxF = *f;
      auxP = *p;    
      
      if(auxP == NULL)
	return 0;
      novo = malloc(sizeof(tFace));
      if (novo == NULL)
         return 0;
      
      for(i=0; i<c1; i++)
         auxP = auxP -> prox;      
      novo -> pt1 = auxP;
    
      auxP = *p;
      for(i=0; i<c2; i++)
         auxP = auxP -> prox;
      novo -> pt2 = auxP;
    
      auxP = *p;
      for(i=0; i<c3; i++)
         auxP = auxP -> prox;
      novo -> pt3 = auxP;
      
      if(*f == NULL){
            novo -> prox = NULL;
            *f = novo;
            return 1;
      }else{
            while(auxF -> prox)
                    auxF = auxF -> prox;
            novo -> prox = auxF -> prox;
            auxF -> prox = novo;
            return 1;          
      }
    
}

void arquivo(tPtrPonto *p, tPtrFace *f, char *arqNome){
    FILE *arquivo;
    int v1,v2,v3,v4,ok;
    char linha[500];
    float x,y,z;
    
     if ((arquivo = fopen(arqNome, "r")) == NULL)
        printf("Arquivo nao pode ser aberto\n");
     else{         
	while(!feof(arquivo)){
            fscanf(arquivo,"%s",linha);
	    if(memcmp(linha,"point",5) == 0){
		fscanf(arquivo,"%s",linha);
		if(memcmp(linha,"[",1) == 0){
		    while(!feof(arquivo)){
			ok = fscanf(arquivo,"%f %f %f",&x,&y,&z); 
			if(ok == 0) break;
			inserePonto(p,x,y,z);
		    }
		}
	    }
        }
	
	if ((arquivo = fopen(arqNome, "r")) == NULL)
	    printf("Arquivo nao pode ser aberto\n");
	else{	
	    ok=1;
	    while(!feof(arquivo)){
		fscanf(arquivo,"%s",linha);
		if(memcmp(linha,"coordIndex",10)==0){
		    fscanf(arquivo,"%s",linha);
		    if(memcmp(linha,"[",1)==0 ){
			    while(!feof(arquivo)){			  
				ok=  fscanf(arquivo,"%d %d %d",&v1,&v2,&v3);
				fscanf(arquivo,"%s",linha);
				if(ok==0)break;
				insereFace(f,p,v1,v2,v3);
			    }
		    }
		    
		}
	    }
	}
	fclose(arquivo);
    }
}

void gera(tPtrFace f, float r, float g, float b){  
    tPtrFace aux;
    aux = f;
        
    if(aux == NULL)
	return;
    while(aux){
      glBegin(GL_TRIANGLE_STRIP);
             glColor3f(r, g, b);
             glVertex3d(aux -> pt1 -> x, aux -> pt1 -> y, aux -> pt1 -> z);
             glVertex3d(aux -> pt2 -> x, aux -> pt2 -> y, aux -> pt2 -> z);
             glVertex3d(aux -> pt3 -> x, aux -> pt3 -> y, aux -> pt3 -> z);
	    aux=aux->prox;
      glEnd();
    }
    glutSwapBuffers();
}
